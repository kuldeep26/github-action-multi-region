name: "Terraform action"
on:
  push:
    branches:
      - main
  pull_request:
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        region: ["us-east-1", "ap-south-1", "ap-northeast-1"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3

      - name: Configure AWS CLI with OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-duration-seconds: 600

      - name: Install AWS CLI
        run: |
          sudo apt-get install -y unzip
          curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Initialize Terraform backend
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.S3_BACKEND_BUCKET_${{ matrix.region | replace('-', '_') | upper }} }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=${{ matrix.region }}"

      - name: Terraform validate
        run: terraform validate

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform plan
        run: |
          terraform plan -var-file=variables-${{ matrix.region }}.tfvars

      - name: Deploy infrastructure
        run: |
          terraform apply -var-file=variables-${{ matrix.region }}.tfvars -auto-approve
